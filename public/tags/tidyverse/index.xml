<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tidyverse on Masumbuko Semba&#39;s Blog</title>
    <link>/tags/tidyverse/</link>
    <description>Recent content in tidyverse on Masumbuko Semba&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/tidyverse/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Processing NECTA Results in R</title>
      <link>/06/14/2020/processing-necta-results-in-r/</link>
      <pubDate>Sun, 14 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/06/14/2020/processing-necta-results-in-r/</guid>
      <description>The the National Examinations Council of Tanzania publishes Primary and Secondary Education Examination Results. But the National Library Services archieve this results. While a fantastic resource for history primary and secondary school results, these records are painful to analyze using software because of the grades results is organized is untidy and in messy.
You need to work on this column of the result to have a clean and right format dataset for exploration and modelling.</description>
    </item>
    
    <item>
      <title>Analyse PCA results in tidyverse context</title>
      <link>/06/02/2020/analyse-pca-results-in-tidyverse-context/</link>
      <pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/06/02/2020/analyse-pca-results-in-tidyverse-context/</guid>
      <description>In the previous post I illustrated a simple way to do Principal Component Analysis in R. I simply used the output results from prcomp() function of R base. But, I constantly find hard to the untidy output that prcomp generates and wished to get a tidy result. In this post I will illustrate the approaches that I was inspired by Claus Wilke in the post PCA tidyverse style.
I will extend the PCA analysis I explained in the A simple Principal Component Analysis (PCA) in R.</description>
    </item>
    
    <item>
      <title>A simple Principal Component Analysis (PCA) in R </title>
      <link>/05/13/2020/simple-pca-in-r/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/05/13/2020/simple-pca-in-r/</guid>
      <description>Principal Component Analysis (PCA)Principal Component Analysis (PCA) is widely used to explore data. This technique allows you visualize and understand how variables in the dataset varies. Therefore, PCA is particularly helpful where the dataset contain many variables.This is a method of unsupervised learning that allows you to better understand the variability in the data set and how different variables are related.
The Components in PCA are the underlying structure in the data.</description>
    </item>
    
    <item>
      <title>Linear and Bayesian Regression Models with tidymodels package</title>
      <link>/05/11/2020/regression-with-tidymodels/</link>
      <pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/05/11/2020/regression-with-tidymodels/</guid>
      <description>As a data scientist, you need to distinguish between regression predictive models and classification predictive models. Clear understanding of these models helps to choose the best one for a specific use case. In a nutshell, regression predictive models andclassification predictive models` fall under supervised machine learning. The main difference between them is that the output variable—in regression is numerical (or continuous) while that for classification is categorical (or discrete).</description>
    </item>
    
    <item>
      <title>A Unified Machine Learning in R with tidymodels</title>
      <link>/05/09/2020/a-unified-machine-learning-in-r-with-tidymodels/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/05/09/2020/a-unified-machine-learning-in-r-with-tidymodels/</guid>
      <description>tidymodelstidymodels is a suite of packages that make machine learning with R a breeze. R has many packages for machine learning, each with their own syntax and function arguments. tidymodels aims to provide an unified interface, which allows data scientists to focus on the problem they’re trying to solve, instead of wasting time with learning package syntax.
The tidymodels has a modular approach meaning that specific, smaller packages designed to work hand in hand.</description>
    </item>
    
    <item>
      <title>Access meteorogical observations using worldmet package</title>
      <link>/11/29/2019/access-meteorogical-observations-using-worldmet-package/</link>
      <pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/11/29/2019/access-meteorogical-observations-using-worldmet-package/</guid>
      <description>David Carslaw (2019) developed R package worldmet, which provides an easy way to access world meteorological data from from the Integrated Surface Database of National Oceanic and Atmospheric Administration (NOAA). The Integrated Surface Database (ISD) consists of global hourly and synoptic observations compiled from numerous sources into a single common ASCII format and common data model.</description>
    </item>
    
  </channel>
</rss>
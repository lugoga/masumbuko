<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technical on Masumbuko Semba</title>
    <link>/categories/technical/</link>
    <description>Recent content in Technical on Masumbuko Semba</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Oct 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/technical/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linear Model with R</title>
      <link>/10/02/2018/modelling-with-r/</link>
      <pubDate>Tue, 02 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/10/02/2018/modelling-with-r/</guid>
      <description>IntroductionIn this post I’am going to illustrate how to model data in R. As Wickham &amp;amp; Grolemund1 put it
The prime goal of modeling is to provide simple low-dimension summary of a dataset.
I am not going to bring a novel science in this post but rather to help you learn the most important tools in R2 that will allow you to model your data.</description>
    </item>
    
    <item>
      <title>Processing CTD measurements in R with Oce and tidyverse packages</title>
      <link>/09/22/2018/processing-ctd-measurements-in-r-with-oce-and-tidyverse-packages/</link>
      <pubDate>Sat, 22 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/09/22/2018/processing-ctd-measurements-in-r-with-oce-and-tidyverse-packages/</guid>
      <description>In the previous post, I illustrate how to process ship-based CTD data with oce1 package in R2 enviroment. We saw the power of this package in reading, summarizing and visualizing CTD data. The downside of oce package in my opinion is its strickest nature of relying on R base for data processing and plotting—preventing customization. Therefore, in this post I will illustrate how to tranforming oce dataset format into a tibble—a modern data frame.</description>
    </item>
    
    <item>
      <title>Getting and Processing Satellite Data made easier in R</title>
      <link>/09/18/2018/get-satellite-data-with-r/</link>
      <pubDate>Tue, 18 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/09/18/2018/get-satellite-data-with-r/</guid>
      <description>Introduction: A Brief OverviewThe amount of data being generated by satellites has soared in recent years. The proliferation of remote sensing data can be explained by recent advancements in satellite technologies. However, according to Febvre1, this advancement set another challenge of handling and processing pentabyte of data satellite generates. Thanks to ERDDAP, for being in front-line to overcome this challenge. We can obtain satellite data within the geographical extent of the area we are interested.</description>
    </item>
    
  </channel>
</rss>